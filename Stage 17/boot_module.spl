//Library
loadi(63,13);
loadi(64,14);

//Timer Interrupt
loadi(4, 17);
loadi(5, 18);

//Console Interrupt 
loadi(8,21);
loadi(9,22);

//INT 6(Read Interrupt)
loadi(14, 27);
loadi(15, 28);

//INT 7(Write Interrupt)
loadi(16,29);
loadi(17,30);

//INIT Program
loadi(65,7);
loadi(66,8);

//INT10
loadi(22,35);
loadi(23,36);

//Exception Handler
loadi(2, 15);
loadi(3, 16);

//Scheduler Module(MOD 5)
loadi(50, 63);
loadi(51, 64);

//Resource Manager Module(MOD 0)
loadi(40, 53);
loadi(41, 54);

//Device Manager Module(MOD 4)
loadi(48, 61);
loadi(49, 62); 

//INT 9
loadi(20, 33);
loadi(21, 34);

//Process Manager Module(MOD 1)
loadi(42, 55);
loadi(43, 56);

//Memory Manager Module(MOD 2)
loadi(44, 57);
loadi(45, 58);

//Initializing Memory Free List
alias i R0;
i=0;
while(i<128) do
	if(i<76) then
		[MEMORY_FREE_LIST + i] = 1;
	else
		[MEMORY_FREE_LIST + i] = 0;
	endif;
	i = i + 1;
endwhile;

[MEMORY_FREE_LIST + 81] = 1;
[MEMORY_FREE_LIST + 82] = 1;

// For INIT
PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

// Initialize the page table for INIT program
// library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

// Heap
[PTBR + 4] = 78;
[PTBR + 5] = "0110";
[PTBR + 6] = 79;
[PTBR + 7] = "0110";

// code
[PTBR + 8] = 65;
[PTBR + 9] = "0100";
[PTBR + 10] = 66;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

// Stack
[PTBR + 16] = 76;
[PTBR + 17] = "0110";
[PTBR + 18] = 77;
[PTBR + 19] = "0110";

// setting up process table for INIT
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 13] = 8 * 512;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;
[PROCESS_TABLE + 16 + 15] = 10;

[76 * 512] = [65 * 512 + 1];

[MEMORY_FREE_LIST + 76] = 1;
[MEMORY_FREE_LIST + 77] = 1;
[MEMORY_FREE_LIST + 78] = 1;
[MEMORY_FREE_LIST + 79] = 1;
[MEMORY_FREE_LIST + 80] = 1;

alias i R0;
i = 2;
while (i < 16) do
    [PROCESS_TABLE + i * 16 + 4] = TERMINATED;
    i = i + 1;
endwhile;

[TERMINAL_STATUS_TABLE + 0] = 0;
[SYSTEM_STATUS_TABLE + 2] = 45;
[SYSTEM_STATUS_TABLE + 3] = 0;

return;
